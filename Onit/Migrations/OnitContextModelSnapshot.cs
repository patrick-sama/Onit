// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Onit.Data;

namespace Onit.Migrations
{
    [DbContext(typeof(OnitContext))]
    partial class OnitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Onit.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Aree");
                });

            modelBuilder.Entity("Onit.Models.Arrivi", b =>
                {
                    b.Property<int>("CarelloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocazioneId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CarelloId", "LocazioneId");

                    b.HasIndex("LocazioneId");

                    b.ToTable("Arrivi");
                });

            modelBuilder.Entity("Onit.Models.Carello", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Matricola")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Carelli");
                });

            modelBuilder.Entity("Onit.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Componente");
                });

            modelBuilder.Entity("Onit.Models.ComponenteDelCarello", b =>
                {
                    b.Property<int>("CarelloId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComponenteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Qty")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarelloId", "ComponenteId");

                    b.HasIndex("ComponenteId");

                    b.ToTable("ComponentiDeiCarelli");
                });

            modelBuilder.Entity("Onit.Models.Locazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Locazioni");
                });

            modelBuilder.Entity("Onit.Models.Arrivi", b =>
                {
                    b.HasOne("Onit.Models.Carello", "Carello")
                        .WithMany("Arrivi")
                        .HasForeignKey("CarelloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onit.Models.Locazione", "Locazione")
                        .WithMany("Arrivi")
                        .HasForeignKey("LocazioneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Onit.Models.ComponenteDelCarello", b =>
                {
                    b.HasOne("Onit.Models.Carello", "Carello")
                        .WithMany("ComponentiDelCarello")
                        .HasForeignKey("CarelloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Onit.Models.Componente", "Componente")
                        .WithMany("ComponentiDelCarello")
                        .HasForeignKey("ComponenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Onit.Models.Locazione", b =>
                {
                    b.HasOne("Onit.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
